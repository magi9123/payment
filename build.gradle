plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.freefair.lombok' version '8.0.1'
    id 'org.sonarqube' version '3.3'
    id 'maven-publish'
    id 'idea'
    id 'java'
}

group 're'
version '1.0-SNAPSHOT'

bootJar {
    mainClass = 'java.org.example.Main'
}

jar {
    manifest {
        attributes 'Main-Class': 'org.example.Application.java'
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

ext {
    springBootVersion = '2.2.1.RELEASE'
    springVersion = '5.6.2'
    springDocVersion = '1.6.13'
    postgresVersion = '42.5.0'
    lombokVersion = '8.0.1'
    jpaModelVersion = '5.6.12.Final'
    jaxpVersion = '1.4.5'

    junitVersion = '5.9.1'
    mockitoVersion = '4.9.0'
    h2Version = '1.4.200'
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor "io.freefair.gradle:lombok-plugin:${lombokVersion}"

    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"

    implementation "org.hibernate:hibernate-jpamodelgen:${jpaModelVersion}"
    implementation "javax.xml.bind:jaxb-api:2.3.0"
    implementation "io.jsonwebtoken:jjwt:0.9.1"
    implementation "commons-io:commons-io:2.11.0"

    implementation "javax.xml.parsers:jaxp-api:${jaxpVersion}"

    runtimeOnly "org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}"
    runtimeOnly "org.postgresql:postgresql:${postgresVersion}"

    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testImplementation "org.springframework.security:spring-security-test:${springVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"

    testRuntimeOnly "com.h2database:h2:${h2Version}"
}
